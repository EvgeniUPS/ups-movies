{"version":3,"sources":["pages/English.js","layout/Footer.js","layout/Header.js","components/Movie.js","components/Movies.js","components/Preloader.js","components/Search.js","pages/Movies.js","pages/Weather.js","pages/NotFound.js","App.js","index.js"],"names":["English","useState","setWords","useEffect","fetch","then","res","json","data","console","log","Footer","className","Date","getFullYear","href","Header","to","id","Movie","props","title","Title","year","Year","imdbID","type","Type","poster","Poster","src","alt","Movies","movies","length","map","movie","Preloader","Search","searchMovies","Function","prototype","search","setSearch","setType","handleFilter","e","target","dataset","value","placeholder","onChange","onKeyDown","key","onClick","name","checked","Main","setMovies","loading","setLoading","catch","err","str","Weather","NotFound","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d5577a7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nfunction English() {\r\n  const [words, setWords] = useState([])\r\n  useEffect(() => {\r\n    fetch(`https://ups-json-server.herokuapp.com/english`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(`data`, data)\r\n        // setMovies(data.Search)\r\n        // setLoading(false)\r\n        setWords(data)\r\n      })\r\n    return () => {}\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h2>English</h2>\r\n      <p></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default English\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='page-footer green darken-4'>\r\n      <div className='footer-copyright'>\r\n        <div className='container'>\r\n          Â© {new Date().getFullYear()} Copyright Text\r\n          <a className='grey-text text-lighten-4 right' href='#!'>\r\n            Link\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className='green darken-2'>\r\n      <div className='nav-wrapper'>\r\n        <Link to='/' className='brand-logo'>\r\n          UPS app\r\n        </Link>\r\n        <ul id='nav-mobile' className='right hide-on-med-and-down'>\r\n          <li>\r\n            <Link to='/'>Movies</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/english'>English</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/weather'>Weather</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Movie(props) {\r\n  const {\r\n    Title: title,\r\n    Year: year,\r\n    imdbID: id,\r\n    Type: type,\r\n    Poster: poster,\r\n  } = props\r\n  return (\r\n    <div id={id} className='card movie'>\r\n      <div className='card-image waves-effect waves-block waves-light'>\r\n        {poster === 'N/A' ? (\r\n          <img\r\n            className='activator'\r\n            src={`https://via.placeholder.com/400x400?text=${title}`}\r\n            alt={'Poster ' + title}\r\n          />\r\n        ) : (\r\n          <img className='activator' src={poster} alt={'Poster ' + title} />\r\n        )}\r\n      </div>\r\n      <div className='card-content'>\r\n        <span className='card-title activator grey-text text-darken-4'>\r\n          {title}\r\n        </span>\r\n        <p>\r\n          {year} <span className='right'>{type}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react'\r\nimport Movie from './Movie'\r\n\r\nfunction Movies(props) {\r\n  const { movies = [] } = props\r\n  return (\r\n    <div className='movies'>\r\n      {movies.length ? (\r\n        movies.map(movie => <Movie key={movie.imdbID} {...movie} />)\r\n      ) : (\r\n        <h4>Not found</h4>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Movies\r\n","function Preloader() {\r\n  return (\r\n    <div className='progress'>\r\n      <div className='indeterminate'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader\r\n","import React, { useState } from 'react'\r\n\r\nconst Search = props => {\r\n  const { searchMovies = Function.prototype } = props\r\n\r\n  const [search, setSearch] = useState('')\r\n  const [type, setType] = useState('all')\r\n\r\n  const handleKey = e => {\r\n    if (e.key === 'Enter') {\r\n      searchMovies(search)\r\n    }\r\n  }\r\n\r\n  const handleFilter = e => {\r\n    setType(() => e.target.dataset.type)\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div className='col s12'>\r\n        <div className='input-field '>\r\n          <input\r\n            value={search}\r\n            className='validate'\r\n            placeholder='Search'\r\n            type='search'\r\n            onChange={e => setSearch(e.target.value)}\r\n            onKeyDown={handleKey}\r\n          />\r\n          <button\r\n            onClick={() => searchMovies(search)}\r\n            className='waves-effect waves-light btn search-btn'\r\n          >\r\n            <i className='material-icons right'>search</i>search\r\n          </button>\r\n\r\n          <div className='filter'>\r\n            <label>\r\n              <input\r\n                className='with-gap'\r\n                name='type'\r\n                type='radio'\r\n                data-type='all'\r\n                onChange={handleFilter}\r\n                checked={type === ''}\r\n              />\r\n              <span>All</span>\r\n            </label>\r\n            <label>\r\n              <input\r\n                className='with-gap'\r\n                name='type'\r\n                type='radio'\r\n                data-type='movie'\r\n                onChange={handleFilter}\r\n                checked={type === 'movie'}\r\n              />\r\n              <span>Movies only</span>\r\n            </label>\r\n            <label>\r\n              <input\r\n                className='with-gap'\r\n                name='type'\r\n                type='radio'\r\n                data-type='series'\r\n                onChange={handleFilter}\r\n                checked={type === 'series'}\r\n              />\r\n              <span>Series only</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react'\r\nimport Movies from '../components/Movies'\r\nimport Preloader from '../components/Preloader'\r\nimport Search from '../components/Search'\r\n\r\n// const API_KEY = process.env.REACT_APP_API_KEY\r\n\r\nconst Main = () => {\r\n  const [movies, setMovies] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const searchMovies = str => {\r\n    setLoading(true)\r\n\r\n    fetch(`https://www.omdbapi.com/?apikey=1f1ef129&s=${str}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setMovies(data.Search)\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=matrix`)\r\n    fetch(`https://www.omdbapi.com/?apikey=1f1ef129&s=matrix`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setMovies(data.Search)\r\n        setLoading(false)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setLoading(false)\r\n      })\r\n\r\n    return () => {}\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Search searchMovies={searchMovies} />\r\n      {loading ? <Preloader /> : <Movies movies={movies} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\n\r\nfunction Weather() {\r\n  return (\r\n    <div>\r\n      <h2>Weather</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h2>Page not found</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport English from './pages/English'\nimport Footer from './layout/Footer'\nimport Header from './layout/Header'\nimport Movies from './pages/Movies'\nimport Weather from './pages/Weather'\nimport NotFound from './pages/NotFound'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <main className='content container'>\n          <Switch>\n            <Route exact path='/' component={Movies} />\n            <Route path='/weather' component={Weather} />\n            <Route path='/english' component={English} />\n            <Route component={NotFound} />\n          </Switch>\n          {/* <English /> */}\n          {/* <Weather /> */}\n          {/* <Movies /> */}\n        </main>\n        <Footer />\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}